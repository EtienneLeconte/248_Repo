{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Pipelines"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: quandl in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (3.5.2)\n",
      "Requirement already satisfied: requests>=2.7.0 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (2.24.0)\n",
      "Requirement already satisfied: python-dateutil in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (2.8.1)\n",
      "Requirement already satisfied: pandas>=0.14 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (1.1.1)\n",
      "Requirement already satisfied: six in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (1.15.0)\n",
      "Requirement already satisfied: inflection>=0.3.1 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (0.5.1)\n",
      "Requirement already satisfied: more-itertools in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (8.5.0)\n",
      "Requirement already satisfied: numpy>=1.8 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from quandl) (1.19.1)\n",
      "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from requests>=2.7.0->quandl) (3.0.4)\n",
      "Requirement already satisfied: idna<3,>=2.5 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from requests>=2.7.0->quandl) (2.10)\n",
      "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from requests>=2.7.0->quandl) (1.25.9)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from requests>=2.7.0->quandl) (2020.6.20)\n",
      "Requirement already satisfied: pytz>=2017.2 in /usr/local/Cellar/jupyterlab/2.2.0/libexec/lib/python3.8/site-packages (from pandas>=0.14->quandl) (2020.1)\n",
      "\u001b[33mWARNING: You are using pip version 20.1.1; however, version 20.2.3 is available.\n",
      "You should consider upgrading via the '/usr/local/Cellar/jupyterlab/2.2.0/libexec/bin/python3.8 -m pip install --upgrade pip' command.\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install quandl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import quandl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import getpass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "········\n"
     ]
    }
   ],
   "source": [
    "quandl.ApiConfig.api_key=getpass.getpass()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "companies=pd.read_csv('https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/data/module-1/companies.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AAPL</td>\n",
       "      <td>Apple Inc.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NFLX</td>\n",
       "      <td>Netflix, Inc.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AMZN</td>\n",
       "      <td>Amazon.com, Inc.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MSFT</td>\n",
       "      <td>Microsoft Corporation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GOOG</td>\n",
       "      <td>Alphabet Inc.</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker                Company\n",
       "0   AAPL             Apple Inc.\n",
       "1   NFLX          Netflix, Inc.\n",
       "2   AMZN       Amazon.com, Inc.\n",
       "3   MSFT  Microsoft Corporation\n",
       "4   GOOG          Alphabet Inc."
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "companies.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30, 2)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "companies.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "ticker_list=companies.Ticker.to_list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "retrieving data for AAPL\n"
     ]
    }
   ],
   "source": [
    "print('retrieving data for',ticker_list[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "prices=quandl.get('WIKI/'+ticker_list[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Ex-Dividend</th>\n",
       "      <th>Split Ratio</th>\n",
       "      <th>Adj. Open</th>\n",
       "      <th>Adj. High</th>\n",
       "      <th>Adj. Low</th>\n",
       "      <th>Adj. Close</th>\n",
       "      <th>Adj. Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1980-12-12</th>\n",
       "      <td>28.75</td>\n",
       "      <td>28.87</td>\n",
       "      <td>28.75</td>\n",
       "      <td>28.750</td>\n",
       "      <td>2093900.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.422706</td>\n",
       "      <td>0.424470</td>\n",
       "      <td>0.422706</td>\n",
       "      <td>0.422706</td>\n",
       "      <td>117258400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-12-15</th>\n",
       "      <td>27.38</td>\n",
       "      <td>27.38</td>\n",
       "      <td>27.25</td>\n",
       "      <td>27.250</td>\n",
       "      <td>785200.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.402563</td>\n",
       "      <td>0.402563</td>\n",
       "      <td>0.400652</td>\n",
       "      <td>0.400652</td>\n",
       "      <td>43971200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-12-16</th>\n",
       "      <td>25.37</td>\n",
       "      <td>25.37</td>\n",
       "      <td>25.25</td>\n",
       "      <td>25.250</td>\n",
       "      <td>472000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.373010</td>\n",
       "      <td>0.373010</td>\n",
       "      <td>0.371246</td>\n",
       "      <td>0.371246</td>\n",
       "      <td>26432000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-12-17</th>\n",
       "      <td>25.87</td>\n",
       "      <td>26.00</td>\n",
       "      <td>25.87</td>\n",
       "      <td>25.870</td>\n",
       "      <td>385900.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.380362</td>\n",
       "      <td>0.382273</td>\n",
       "      <td>0.380362</td>\n",
       "      <td>0.380362</td>\n",
       "      <td>21610400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980-12-18</th>\n",
       "      <td>26.63</td>\n",
       "      <td>26.75</td>\n",
       "      <td>26.63</td>\n",
       "      <td>26.630</td>\n",
       "      <td>327900.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.391536</td>\n",
       "      <td>0.393300</td>\n",
       "      <td>0.391536</td>\n",
       "      <td>0.391536</td>\n",
       "      <td>18362400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-21</th>\n",
       "      <td>175.04</td>\n",
       "      <td>175.09</td>\n",
       "      <td>171.26</td>\n",
       "      <td>171.270</td>\n",
       "      <td>35247358.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>175.040000</td>\n",
       "      <td>175.090000</td>\n",
       "      <td>171.260000</td>\n",
       "      <td>171.270000</td>\n",
       "      <td>35247358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-22</th>\n",
       "      <td>170.00</td>\n",
       "      <td>172.68</td>\n",
       "      <td>168.60</td>\n",
       "      <td>168.845</td>\n",
       "      <td>41051076.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>172.680000</td>\n",
       "      <td>168.600000</td>\n",
       "      <td>168.845000</td>\n",
       "      <td>41051076.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-23</th>\n",
       "      <td>168.39</td>\n",
       "      <td>169.92</td>\n",
       "      <td>164.94</td>\n",
       "      <td>164.940</td>\n",
       "      <td>40248954.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>168.390000</td>\n",
       "      <td>169.920000</td>\n",
       "      <td>164.940000</td>\n",
       "      <td>164.940000</td>\n",
       "      <td>40248954.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-26</th>\n",
       "      <td>168.07</td>\n",
       "      <td>173.10</td>\n",
       "      <td>166.44</td>\n",
       "      <td>172.770</td>\n",
       "      <td>36272617.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>168.070000</td>\n",
       "      <td>173.100000</td>\n",
       "      <td>166.440000</td>\n",
       "      <td>172.770000</td>\n",
       "      <td>36272617.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-27</th>\n",
       "      <td>173.68</td>\n",
       "      <td>175.15</td>\n",
       "      <td>166.92</td>\n",
       "      <td>168.340</td>\n",
       "      <td>38962839.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>173.680000</td>\n",
       "      <td>175.150000</td>\n",
       "      <td>166.920000</td>\n",
       "      <td>168.340000</td>\n",
       "      <td>38962839.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9400 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Open    High     Low    Close      Volume  Ex-Dividend  \\\n",
       "Date                                                                   \n",
       "1980-12-12   28.75   28.87   28.75   28.750   2093900.0          0.0   \n",
       "1980-12-15   27.38   27.38   27.25   27.250    785200.0          0.0   \n",
       "1980-12-16   25.37   25.37   25.25   25.250    472000.0          0.0   \n",
       "1980-12-17   25.87   26.00   25.87   25.870    385900.0          0.0   \n",
       "1980-12-18   26.63   26.75   26.63   26.630    327900.0          0.0   \n",
       "...            ...     ...     ...      ...         ...          ...   \n",
       "2018-03-21  175.04  175.09  171.26  171.270  35247358.0          0.0   \n",
       "2018-03-22  170.00  172.68  168.60  168.845  41051076.0          0.0   \n",
       "2018-03-23  168.39  169.92  164.94  164.940  40248954.0          0.0   \n",
       "2018-03-26  168.07  173.10  166.44  172.770  36272617.0          0.0   \n",
       "2018-03-27  173.68  175.15  166.92  168.340  38962839.0          0.0   \n",
       "\n",
       "            Split Ratio   Adj. Open   Adj. High    Adj. Low  Adj. Close  \\\n",
       "Date                                                                      \n",
       "1980-12-12          1.0    0.422706    0.424470    0.422706    0.422706   \n",
       "1980-12-15          1.0    0.402563    0.402563    0.400652    0.400652   \n",
       "1980-12-16          1.0    0.373010    0.373010    0.371246    0.371246   \n",
       "1980-12-17          1.0    0.380362    0.382273    0.380362    0.380362   \n",
       "1980-12-18          1.0    0.391536    0.393300    0.391536    0.391536   \n",
       "...                 ...         ...         ...         ...         ...   \n",
       "2018-03-21          1.0  175.040000  175.090000  171.260000  171.270000   \n",
       "2018-03-22          1.0  170.000000  172.680000  168.600000  168.845000   \n",
       "2018-03-23          1.0  168.390000  169.920000  164.940000  164.940000   \n",
       "2018-03-26          1.0  168.070000  173.100000  166.440000  172.770000   \n",
       "2018-03-27          1.0  173.680000  175.150000  166.920000  168.340000   \n",
       "\n",
       "            Adj. Volume  \n",
       "Date                     \n",
       "1980-12-12  117258400.0  \n",
       "1980-12-15   43971200.0  \n",
       "1980-12-16   26432000.0  \n",
       "1980-12-17   21610400.0  \n",
       "1980-12-18   18362400.0  \n",
       "...                 ...  \n",
       "2018-03-21   35247358.0  \n",
       "2018-03-22   41051076.0  \n",
       "2018-03-23   40248954.0  \n",
       "2018-03-26   36272617.0  \n",
       "2018-03-27   38962839.0  \n",
       "\n",
       "[9400 rows x 12 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "prices=quandl.get('WIKI/'+ticker_list[29])['Adj. Close'].reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "prices['Ticker']=ticker_list[29]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Adj. Close</th>\n",
       "      <th>Ticker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1991-09-30</td>\n",
       "      <td>10.890339</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1991-10-01</td>\n",
       "      <td>11.211020</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1991-10-02</td>\n",
       "      <td>10.890339</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1991-10-03</td>\n",
       "      <td>11.371361</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1991-10-04</td>\n",
       "      <td>10.890339</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6668</th>\n",
       "      <td>2018-03-21</td>\n",
       "      <td>85.920000</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6669</th>\n",
       "      <td>2018-03-22</td>\n",
       "      <td>84.240000</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6670</th>\n",
       "      <td>2018-03-23</td>\n",
       "      <td>82.900000</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6671</th>\n",
       "      <td>2018-03-26</td>\n",
       "      <td>84.130000</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6672</th>\n",
       "      <td>2018-03-27</td>\n",
       "      <td>83.290000</td>\n",
       "      <td>WM</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6673 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date  Adj. Close Ticker\n",
       "0    1991-09-30   10.890339     WM\n",
       "1    1991-10-01   11.211020     WM\n",
       "2    1991-10-02   10.890339     WM\n",
       "3    1991-10-03   11.371361     WM\n",
       "4    1991-10-04   10.890339     WM\n",
       "...         ...         ...    ...\n",
       "6668 2018-03-21   85.920000     WM\n",
       "6669 2018-03-22   84.240000     WM\n",
       "6670 2018-03-23   82.900000     WM\n",
       "6671 2018-03-26   84.130000     WM\n",
       "6672 2018-03-27   83.290000     WM\n",
       "\n",
       "[6673 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_tickers():\n",
    "    companies=pd.read_csv('https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/data/module-1/companies.csv')\n",
    "    ticker_list=companies.Ticker.to_list()\n",
    "    print('Retrieved',len(ticker_list),'tickers')\n",
    "    return ticker_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieved 30 tickers\n"
     ]
    }
   ],
   "source": [
    "tickers=get_tickers()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_prices(ticker):\n",
    "    print('Retrieving data for',ticker)\n",
    "    prices=quandl.get('WIKI/'+ticker)['Adj. Close'].reset_index()\n",
    "    prices['Ticker']=ticker\n",
    "    return prices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def acquisition():\n",
    "    tickers=get_tickers()\n",
    "    data=[get_prices(ticker) for ticker in tickers]\n",
    "    df=pd.concat(data, sort=True)\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieved 30 tickers\n",
      "Retrieving data for AAPL\n",
      "Retrieving data for NFLX\n",
      "Retrieving data for AMZN\n",
      "Retrieving data for MSFT\n",
      "Retrieving data for GOOG\n",
      "Retrieving data for TSLA\n",
      "Retrieving data for FB\n",
      "Retrieving data for AAP\n",
      "Retrieving data for DIS\n",
      "Retrieving data for NKE\n",
      "Retrieving data for UA\n",
      "Retrieving data for BAC\n",
      "Retrieving data for CCL\n",
      "Retrieving data for CI\n",
      "Retrieving data for AAL\n",
      "Retrieving data for LUV\n",
      "Retrieving data for WFC\n",
      "Retrieving data for WMT\n",
      "Retrieving data for HD\n",
      "Retrieving data for ORCL\n",
      "Retrieving data for IBM\n",
      "Retrieving data for NCLH\n",
      "Retrieving data for RCL\n",
      "Retrieving data for TWX\n",
      "Retrieving data for FOX\n",
      "Retrieving data for F\n",
      "Retrieving data for GCI\n",
      "Retrieving data for XOM\n",
      "Retrieving data for WWE\n",
      "Retrieving data for WM\n"
     ]
    }
   ],
   "source": [
    "df=acquisition()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "def concat_pivot(df, rows='Date', columns='Ticker', values='Adj. Close'):\n",
    "    pivot=df.pivot_table(values=values, index=rows, columns=columns)\n",
    "    return pivot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Ticker</th>\n",
       "      <th>AAL</th>\n",
       "      <th>AAP</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>AMZN</th>\n",
       "      <th>BAC</th>\n",
       "      <th>CCL</th>\n",
       "      <th>CI</th>\n",
       "      <th>DIS</th>\n",
       "      <th>F</th>\n",
       "      <th>FB</th>\n",
       "      <th>...</th>\n",
       "      <th>ORCL</th>\n",
       "      <th>RCL</th>\n",
       "      <th>TSLA</th>\n",
       "      <th>TWX</th>\n",
       "      <th>UA</th>\n",
       "      <th>WFC</th>\n",
       "      <th>WM</th>\n",
       "      <th>WMT</th>\n",
       "      <th>WWE</th>\n",
       "      <th>XOM</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1962-01-02</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.141259</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962-01-03</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.143155</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962-01-04</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.143155</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962-01-05</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.143648</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962-01-08</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.143155</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-21</th>\n",
       "      <td>54.09</td>\n",
       "      <td>115.24</td>\n",
       "      <td>171.270</td>\n",
       "      <td>1581.86</td>\n",
       "      <td>31.87</td>\n",
       "      <td>67.06</td>\n",
       "      <td>167.05</td>\n",
       "      <td>101.820000</td>\n",
       "      <td>11.10</td>\n",
       "      <td>169.39</td>\n",
       "      <td>...</td>\n",
       "      <td>47.02</td>\n",
       "      <td>123.37</td>\n",
       "      <td>316.53</td>\n",
       "      <td>95.29</td>\n",
       "      <td>14.07</td>\n",
       "      <td>54.79</td>\n",
       "      <td>85.92</td>\n",
       "      <td>88.18</td>\n",
       "      <td>36.30</td>\n",
       "      <td>75.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-22</th>\n",
       "      <td>52.31</td>\n",
       "      <td>111.71</td>\n",
       "      <td>168.845</td>\n",
       "      <td>1544.10</td>\n",
       "      <td>30.55</td>\n",
       "      <td>66.20</td>\n",
       "      <td>165.34</td>\n",
       "      <td>100.600000</td>\n",
       "      <td>10.75</td>\n",
       "      <td>164.89</td>\n",
       "      <td>...</td>\n",
       "      <td>45.89</td>\n",
       "      <td>120.18</td>\n",
       "      <td>309.10</td>\n",
       "      <td>94.26</td>\n",
       "      <td>13.71</td>\n",
       "      <td>52.53</td>\n",
       "      <td>84.24</td>\n",
       "      <td>87.14</td>\n",
       "      <td>35.90</td>\n",
       "      <td>73.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-23</th>\n",
       "      <td>51.01</td>\n",
       "      <td>110.84</td>\n",
       "      <td>164.940</td>\n",
       "      <td>1495.56</td>\n",
       "      <td>29.17</td>\n",
       "      <td>64.41</td>\n",
       "      <td>164.00</td>\n",
       "      <td>98.540000</td>\n",
       "      <td>10.56</td>\n",
       "      <td>159.39</td>\n",
       "      <td>...</td>\n",
       "      <td>44.79</td>\n",
       "      <td>117.04</td>\n",
       "      <td>301.54</td>\n",
       "      <td>92.57</td>\n",
       "      <td>13.72</td>\n",
       "      <td>50.98</td>\n",
       "      <td>82.90</td>\n",
       "      <td>85.42</td>\n",
       "      <td>35.82</td>\n",
       "      <td>72.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-26</th>\n",
       "      <td>51.86</td>\n",
       "      <td>114.77</td>\n",
       "      <td>172.770</td>\n",
       "      <td>1555.86</td>\n",
       "      <td>30.44</td>\n",
       "      <td>65.80</td>\n",
       "      <td>168.68</td>\n",
       "      <td>100.650000</td>\n",
       "      <td>10.83</td>\n",
       "      <td>160.06</td>\n",
       "      <td>...</td>\n",
       "      <td>46.48</td>\n",
       "      <td>119.92</td>\n",
       "      <td>304.18</td>\n",
       "      <td>93.99</td>\n",
       "      <td>14.46</td>\n",
       "      <td>52.29</td>\n",
       "      <td>84.13</td>\n",
       "      <td>87.50</td>\n",
       "      <td>36.90</td>\n",
       "      <td>74.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-27</th>\n",
       "      <td>50.90</td>\n",
       "      <td>115.01</td>\n",
       "      <td>168.340</td>\n",
       "      <td>1497.05</td>\n",
       "      <td>29.52</td>\n",
       "      <td>65.73</td>\n",
       "      <td>165.54</td>\n",
       "      <td>99.360000</td>\n",
       "      <td>10.83</td>\n",
       "      <td>152.19</td>\n",
       "      <td>...</td>\n",
       "      <td>45.38</td>\n",
       "      <td>118.30</td>\n",
       "      <td>279.18</td>\n",
       "      <td>94.20</td>\n",
       "      <td>14.32</td>\n",
       "      <td>51.10</td>\n",
       "      <td>83.29</td>\n",
       "      <td>86.05</td>\n",
       "      <td>36.18</td>\n",
       "      <td>73.70</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14156 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Ticker        AAL     AAP     AAPL     AMZN    BAC    CCL      CI         DIS  \\\n",
       "Date                                                                            \n",
       "1962-01-02    NaN     NaN      NaN      NaN    NaN    NaN     NaN    0.141259   \n",
       "1962-01-03    NaN     NaN      NaN      NaN    NaN    NaN     NaN    0.143155   \n",
       "1962-01-04    NaN     NaN      NaN      NaN    NaN    NaN     NaN    0.143155   \n",
       "1962-01-05    NaN     NaN      NaN      NaN    NaN    NaN     NaN    0.143648   \n",
       "1962-01-08    NaN     NaN      NaN      NaN    NaN    NaN     NaN    0.143155   \n",
       "...           ...     ...      ...      ...    ...    ...     ...         ...   \n",
       "2018-03-21  54.09  115.24  171.270  1581.86  31.87  67.06  167.05  101.820000   \n",
       "2018-03-22  52.31  111.71  168.845  1544.10  30.55  66.20  165.34  100.600000   \n",
       "2018-03-23  51.01  110.84  164.940  1495.56  29.17  64.41  164.00   98.540000   \n",
       "2018-03-26  51.86  114.77  172.770  1555.86  30.44  65.80  168.68  100.650000   \n",
       "2018-03-27  50.90  115.01  168.340  1497.05  29.52  65.73  165.54   99.360000   \n",
       "\n",
       "Ticker          F      FB  ...   ORCL     RCL    TSLA    TWX     UA    WFC  \\\n",
       "Date                       ...                                               \n",
       "1962-01-02    NaN     NaN  ...    NaN     NaN     NaN    NaN    NaN    NaN   \n",
       "1962-01-03    NaN     NaN  ...    NaN     NaN     NaN    NaN    NaN    NaN   \n",
       "1962-01-04    NaN     NaN  ...    NaN     NaN     NaN    NaN    NaN    NaN   \n",
       "1962-01-05    NaN     NaN  ...    NaN     NaN     NaN    NaN    NaN    NaN   \n",
       "1962-01-08    NaN     NaN  ...    NaN     NaN     NaN    NaN    NaN    NaN   \n",
       "...           ...     ...  ...    ...     ...     ...    ...    ...    ...   \n",
       "2018-03-21  11.10  169.39  ...  47.02  123.37  316.53  95.29  14.07  54.79   \n",
       "2018-03-22  10.75  164.89  ...  45.89  120.18  309.10  94.26  13.71  52.53   \n",
       "2018-03-23  10.56  159.39  ...  44.79  117.04  301.54  92.57  13.72  50.98   \n",
       "2018-03-26  10.83  160.06  ...  46.48  119.92  304.18  93.99  14.46  52.29   \n",
       "2018-03-27  10.83  152.19  ...  45.38  118.30  279.18  94.20  14.32  51.10   \n",
       "\n",
       "Ticker         WM    WMT    WWE    XOM  \n",
       "Date                                    \n",
       "1962-01-02    NaN    NaN    NaN    NaN  \n",
       "1962-01-03    NaN    NaN    NaN    NaN  \n",
       "1962-01-04    NaN    NaN    NaN    NaN  \n",
       "1962-01-05    NaN    NaN    NaN    NaN  \n",
       "1962-01-08    NaN    NaN    NaN    NaN  \n",
       "...           ...    ...    ...    ...  \n",
       "2018-03-21  85.92  88.18  36.30  75.04  \n",
       "2018-03-22  84.24  87.14  35.90  73.50  \n",
       "2018-03-23  82.90  85.42  35.82  72.89  \n",
       "2018-03-26  84.13  87.50  36.90  74.00  \n",
       "2018-03-27  83.29  86.05  36.18  73.70  \n",
       "\n",
       "[14156 rows x 30 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concat_pivot(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "concat_pivot(df).pct_change()['AAL'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def compute_pct_change(df):\n",
    "    return df.pct_change()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "````python\n",
    "# CLASSIC WAY TO GATHER AND MANIPULATE DATA \n",
    "\n",
    "df=acquisition()\n",
    "df=concat_pivot(df)\n",
    "df=compute_pct_change(df)\n",
    "````"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```python\n",
    "# CREATING A PIPELINE TO DO SO / RECOMMANDED METHOD\n",
    "\n",
    "acquisition().pipe(concat_pivot).pipe(compute_pct_change)\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "````python\n",
    "# DIFFICULT TO READ METHOD / NOT RECOMMANDED \n",
    "\n",
    "compute_pct_change(concat_pivot(acquisition(), rows='Date', columns='Ticker', values='Adj. Close'))\n",
    "````"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Retrieved 30 tickers\n",
      "Retrieving data for AAPL\n",
      "Retrieving data for NFLX\n",
      "Retrieving data for AMZN\n",
      "Retrieving data for MSFT\n",
      "Retrieving data for GOOG\n",
      "Retrieving data for TSLA\n",
      "Retrieving data for FB\n",
      "Retrieving data for AAP\n",
      "Retrieving data for DIS\n",
      "Retrieving data for NKE\n",
      "Retrieving data for UA\n",
      "Retrieving data for BAC\n",
      "Retrieving data for CCL\n",
      "Retrieving data for CI\n",
      "Retrieving data for AAL\n",
      "Retrieving data for LUV\n",
      "Retrieving data for WFC\n",
      "Retrieving data for WMT\n",
      "Retrieving data for HD\n",
      "Retrieving data for ORCL\n",
      "Retrieving data for IBM\n",
      "Retrieving data for NCLH\n",
      "Retrieving data for RCL\n",
      "Retrieving data for TWX\n",
      "Retrieving data for FOX\n",
      "Retrieving data for F\n",
      "Retrieving data for GCI\n",
      "Retrieving data for XOM\n",
      "Retrieving data for WWE\n",
      "Retrieving data for WM\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Date</th>\n",
       "      <th>1962-01-02</th>\n",
       "      <th>1962-01-03</th>\n",
       "      <th>1962-01-04</th>\n",
       "      <th>1962-01-05</th>\n",
       "      <th>1962-01-08</th>\n",
       "      <th>1962-01-09</th>\n",
       "      <th>1962-01-10</th>\n",
       "      <th>1962-01-11</th>\n",
       "      <th>1962-01-12</th>\n",
       "      <th>1962-01-15</th>\n",
       "      <th>...</th>\n",
       "      <th>2018-03-14</th>\n",
       "      <th>2018-03-15</th>\n",
       "      <th>2018-03-16</th>\n",
       "      <th>2018-03-19</th>\n",
       "      <th>2018-03-20</th>\n",
       "      <th>2018-03-21</th>\n",
       "      <th>2018-03-22</th>\n",
       "      <th>2018-03-23</th>\n",
       "      <th>2018-03-26</th>\n",
       "      <th>2018-03-27</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AAL</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AAP</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.117583</td>\n",
       "      <td>1.122530</td>\n",
       "      <td>1.105235</td>\n",
       "      <td>1.121384</td>\n",
       "      <td>1.065257</td>\n",
       "      <td>1.130523</td>\n",
       "      <td>1.135538</td>\n",
       "      <td>1.172907</td>\n",
       "      <td>1.213074</td>\n",
       "      <td>1.259528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AAPL</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0.524346</td>\n",
       "      <td>0.525619</td>\n",
       "      <td>0.526365</td>\n",
       "      <td>0.512902</td>\n",
       "      <td>0.533829</td>\n",
       "      <td>0.486203</td>\n",
       "      <td>0.511458</td>\n",
       "      <td>0.488091</td>\n",
       "      <td>0.505359</td>\n",
       "      <td>0.463699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AMZN</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.916162</td>\n",
       "      <td>7.857095</td>\n",
       "      <td>7.828671</td>\n",
       "      <td>7.813063</td>\n",
       "      <td>8.053355</td>\n",
       "      <td>8.236060</td>\n",
       "      <td>8.145074</td>\n",
       "      <td>8.067297</td>\n",
       "      <td>8.005383</td>\n",
       "      <td>7.893014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BAC</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.979799</td>\n",
       "      <td>-0.979713</td>\n",
       "      <td>-0.979531</td>\n",
       "      <td>-0.979300</td>\n",
       "      <td>-0.979843</td>\n",
       "      <td>-0.979853</td>\n",
       "      <td>-0.980215</td>\n",
       "      <td>-0.980496</td>\n",
       "      <td>-0.980435</td>\n",
       "      <td>-0.980281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CCL</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.083385</td>\n",
       "      <td>1.078816</td>\n",
       "      <td>1.079888</td>\n",
       "      <td>1.114759</td>\n",
       "      <td>1.121639</td>\n",
       "      <td>1.104173</td>\n",
       "      <td>1.166939</td>\n",
       "      <td>1.208091</td>\n",
       "      <td>1.161629</td>\n",
       "      <td>1.226626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CI</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.492234</td>\n",
       "      <td>1.501124</td>\n",
       "      <td>1.520849</td>\n",
       "      <td>1.461038</td>\n",
       "      <td>1.431835</td>\n",
       "      <td>1.491053</td>\n",
       "      <td>1.497583</td>\n",
       "      <td>1.546188</td>\n",
       "      <td>1.563526</td>\n",
       "      <td>1.518485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DIS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.377397</td>\n",
       "      <td>-0.381426</td>\n",
       "      <td>-0.390111</td>\n",
       "      <td>-0.390291</td>\n",
       "      <td>-0.385758</td>\n",
       "      <td>-0.390482</td>\n",
       "      <td>-0.391557</td>\n",
       "      <td>-0.399146</td>\n",
       "      <td>-0.403308</td>\n",
       "      <td>-0.399783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.893936</td>\n",
       "      <td>-0.892774</td>\n",
       "      <td>-0.891611</td>\n",
       "      <td>-0.891506</td>\n",
       "      <td>-0.891564</td>\n",
       "      <td>-0.890984</td>\n",
       "      <td>-0.893141</td>\n",
       "      <td>-0.892835</td>\n",
       "      <td>-0.892399</td>\n",
       "      <td>-0.891002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FB</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>15.714156</td>\n",
       "      <td>15.608853</td>\n",
       "      <td>15.600000</td>\n",
       "      <td>14.673025</td>\n",
       "      <td>14.300273</td>\n",
       "      <td>14.260360</td>\n",
       "      <td>14.338605</td>\n",
       "      <td>14.093750</td>\n",
       "      <td>13.779317</td>\n",
       "      <td>13.052632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FOX</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.797872</td>\n",
       "      <td>-0.800392</td>\n",
       "      <td>-0.802150</td>\n",
       "      <td>-0.789928</td>\n",
       "      <td>-0.784835</td>\n",
       "      <td>-0.785702</td>\n",
       "      <td>-0.780581</td>\n",
       "      <td>-0.777590</td>\n",
       "      <td>-0.771461</td>\n",
       "      <td>-0.762928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GCI</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GOOG</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>29.875369</td>\n",
       "      <td>30.323706</td>\n",
       "      <td>30.013927</td>\n",
       "      <td>29.339862</td>\n",
       "      <td>29.340243</td>\n",
       "      <td>29.051791</td>\n",
       "      <td>27.996130</td>\n",
       "      <td>27.817207</td>\n",
       "      <td>27.791963</td>\n",
       "      <td>26.857539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HD</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.845662</td>\n",
       "      <td>-0.845100</td>\n",
       "      <td>-0.842427</td>\n",
       "      <td>-0.838974</td>\n",
       "      <td>-0.837698</td>\n",
       "      <td>-0.836811</td>\n",
       "      <td>-0.832911</td>\n",
       "      <td>-0.831827</td>\n",
       "      <td>-0.832531</td>\n",
       "      <td>-0.826206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IBM</th>\n",
       "      <td>105.890866</td>\n",
       "      <td>105.397078</td>\n",
       "      <td>104.336795</td>\n",
       "      <td>101.907944</td>\n",
       "      <td>100.32616</td>\n",
       "      <td>99.527506</td>\n",
       "      <td>98.749677</td>\n",
       "      <td>96.975897</td>\n",
       "      <td>100.316048</td>\n",
       "      <td>100.765144</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.108731</td>\n",
       "      <td>-0.103667</td>\n",
       "      <td>-0.104493</td>\n",
       "      <td>-0.111519</td>\n",
       "      <td>-0.123260</td>\n",
       "      <td>-0.119818</td>\n",
       "      <td>-0.132352</td>\n",
       "      <td>-0.133353</td>\n",
       "      <td>-0.130457</td>\n",
       "      <td>-0.130353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LUV</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.622945</td>\n",
       "      <td>-0.624460</td>\n",
       "      <td>-0.619993</td>\n",
       "      <td>-0.614871</td>\n",
       "      <td>-0.611460</td>\n",
       "      <td>-0.631246</td>\n",
       "      <td>-0.625222</td>\n",
       "      <td>-0.619048</td>\n",
       "      <td>-0.624503</td>\n",
       "      <td>-0.626819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MSFT</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.574136</td>\n",
       "      <td>0.571238</td>\n",
       "      <td>0.553366</td>\n",
       "      <td>0.532838</td>\n",
       "      <td>0.534520</td>\n",
       "      <td>0.600554</td>\n",
       "      <td>0.575263</td>\n",
       "      <td>0.537024</td>\n",
       "      <td>0.628408</td>\n",
       "      <td>0.578232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NCLH</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.403836</td>\n",
       "      <td>-0.412402</td>\n",
       "      <td>-0.406765</td>\n",
       "      <td>-0.403380</td>\n",
       "      <td>-0.401697</td>\n",
       "      <td>-0.414252</td>\n",
       "      <td>-0.412964</td>\n",
       "      <td>-0.410415</td>\n",
       "      <td>-0.440819</td>\n",
       "      <td>-0.409076</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NFLX</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>4.747096</td>\n",
       "      <td>4.802132</td>\n",
       "      <td>4.674448</td>\n",
       "      <td>4.656442</td>\n",
       "      <td>4.698134</td>\n",
       "      <td>4.842348</td>\n",
       "      <td>4.818630</td>\n",
       "      <td>4.854864</td>\n",
       "      <td>5.108886</td>\n",
       "      <td>4.687346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NKE</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.794122</td>\n",
       "      <td>-0.793236</td>\n",
       "      <td>-0.793029</td>\n",
       "      <td>-0.790385</td>\n",
       "      <td>-0.789606</td>\n",
       "      <td>-0.790350</td>\n",
       "      <td>-0.789958</td>\n",
       "      <td>-0.785240</td>\n",
       "      <td>-0.794287</td>\n",
       "      <td>-0.779939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ORCL</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.209668</td>\n",
       "      <td>-0.211176</td>\n",
       "      <td>-0.206949</td>\n",
       "      <td>-0.209405</td>\n",
       "      <td>-0.295659</td>\n",
       "      <td>-0.291334</td>\n",
       "      <td>-0.287644</td>\n",
       "      <td>-0.306978</td>\n",
       "      <td>-0.294689</td>\n",
       "      <td>-0.314191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>RCL</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.401185</td>\n",
       "      <td>1.380179</td>\n",
       "      <td>1.386646</td>\n",
       "      <td>1.394995</td>\n",
       "      <td>1.653773</td>\n",
       "      <td>1.623777</td>\n",
       "      <td>1.618871</td>\n",
       "      <td>1.613083</td>\n",
       "      <td>1.580034</td>\n",
       "      <td>1.606875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TSLA</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.599936</td>\n",
       "      <td>1.612114</td>\n",
       "      <td>1.575952</td>\n",
       "      <td>1.520174</td>\n",
       "      <td>1.487186</td>\n",
       "      <td>1.565697</td>\n",
       "      <td>1.571975</td>\n",
       "      <td>1.576384</td>\n",
       "      <td>1.536524</td>\n",
       "      <td>1.359932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TWX</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.704865</td>\n",
       "      <td>-0.702457</td>\n",
       "      <td>-0.700389</td>\n",
       "      <td>-0.696868</td>\n",
       "      <td>-0.693512</td>\n",
       "      <td>-0.698954</td>\n",
       "      <td>-0.695050</td>\n",
       "      <td>-0.693009</td>\n",
       "      <td>-0.691005</td>\n",
       "      <td>-0.662583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UA</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.854564</td>\n",
       "      <td>-0.857246</td>\n",
       "      <td>-0.853760</td>\n",
       "      <td>-0.851973</td>\n",
       "      <td>-0.852805</td>\n",
       "      <td>-0.852345</td>\n",
       "      <td>-0.854551</td>\n",
       "      <td>-0.851788</td>\n",
       "      <td>-0.846154</td>\n",
       "      <td>-0.847983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WFC</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.039230</td>\n",
       "      <td>3.109183</td>\n",
       "      <td>2.970170</td>\n",
       "      <td>2.943141</td>\n",
       "      <td>2.918630</td>\n",
       "      <td>2.894101</td>\n",
       "      <td>2.831510</td>\n",
       "      <td>2.715743</td>\n",
       "      <td>2.616183</td>\n",
       "      <td>2.568436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WM</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.525870</td>\n",
       "      <td>0.517684</td>\n",
       "      <td>0.545438</td>\n",
       "      <td>0.546503</td>\n",
       "      <td>0.571403</td>\n",
       "      <td>0.568169</td>\n",
       "      <td>0.603655</td>\n",
       "      <td>0.626128</td>\n",
       "      <td>0.608912</td>\n",
       "      <td>0.629941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WMT</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.014582</td>\n",
       "      <td>0.014609</td>\n",
       "      <td>0.032180</td>\n",
       "      <td>0.019231</td>\n",
       "      <td>0.019474</td>\n",
       "      <td>0.026304</td>\n",
       "      <td>0.034425</td>\n",
       "      <td>0.030398</td>\n",
       "      <td>0.040057</td>\n",
       "      <td>0.033137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WWE</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.574085</td>\n",
       "      <td>-0.576048</td>\n",
       "      <td>-0.585287</td>\n",
       "      <td>-0.582847</td>\n",
       "      <td>-0.585105</td>\n",
       "      <td>-0.588342</td>\n",
       "      <td>-0.588019</td>\n",
       "      <td>-0.580660</td>\n",
       "      <td>-0.578286</td>\n",
       "      <td>-0.579547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>XOM</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.971077</td>\n",
       "      <td>1.005930</td>\n",
       "      <td>1.031368</td>\n",
       "      <td>1.032621</td>\n",
       "      <td>1.027679</td>\n",
       "      <td>1.067218</td>\n",
       "      <td>1.047354</td>\n",
       "      <td>1.034897</td>\n",
       "      <td>1.005420</td>\n",
       "      <td>1.037037</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30 rows × 14156 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Date    1962-01-02  1962-01-03  1962-01-04  1962-01-05  1962-01-08  \\\n",
       "Ticker                                                               \n",
       "AAL            NaN         NaN         NaN         NaN         NaN   \n",
       "AAP            NaN         NaN         NaN         NaN         NaN   \n",
       "AAPL           NaN         NaN         NaN         NaN         NaN   \n",
       "AMZN           NaN         NaN         NaN         NaN         NaN   \n",
       "BAC            NaN         NaN         NaN         NaN         NaN   \n",
       "CCL            NaN         NaN         NaN         NaN         NaN   \n",
       "CI             NaN         NaN         NaN         NaN         NaN   \n",
       "DIS            NaN         NaN         NaN         NaN         NaN   \n",
       "F         0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "FB        0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "FOX       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "GCI       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "GOOG      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "HD        0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "IBM     105.890866  105.397078  104.336795  101.907944   100.32616   \n",
       "LUV       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "MSFT      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "NCLH      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "NFLX      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "NKE       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "ORCL      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "RCL       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "TSLA      0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "TWX       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "UA        0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "WFC       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "WM        0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "WMT       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "WWE       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "XOM       0.000000    0.000000    0.000000    0.000000     0.00000   \n",
       "\n",
       "Date    1962-01-09  1962-01-10  1962-01-11  1962-01-12  1962-01-15  ...  \\\n",
       "Ticker                                                              ...   \n",
       "AAL            NaN         NaN         NaN         NaN         NaN  ...   \n",
       "AAP            NaN         NaN         NaN         NaN         NaN  ...   \n",
       "AAPL           NaN         NaN         NaN         NaN         NaN  ...   \n",
       "AMZN           NaN         NaN         NaN         NaN         NaN  ...   \n",
       "BAC            NaN         NaN         NaN         NaN         NaN  ...   \n",
       "CCL            NaN         NaN         NaN         NaN         NaN  ...   \n",
       "CI             NaN         NaN         NaN         NaN         NaN  ...   \n",
       "DIS            NaN         NaN         NaN         NaN         NaN  ...   \n",
       "F         0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "FB        0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "FOX       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "GCI       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "GOOG      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "HD        0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "IBM      99.527506   98.749677   96.975897  100.316048  100.765144  ...   \n",
       "LUV       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "MSFT      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "NCLH      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "NFLX      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "NKE       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "ORCL      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "RCL       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "TSLA      0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "TWX       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "UA        0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "WFC       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "WM        0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "WMT       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "WWE       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "XOM       0.000000    0.000000    0.000000    0.000000    0.000000  ...   \n",
       "\n",
       "Date    2018-03-14  2018-03-15  2018-03-16  2018-03-19  2018-03-20  \\\n",
       "Ticker                                                               \n",
       "AAL            NaN         NaN         NaN         NaN         NaN   \n",
       "AAP       1.117583    1.122530    1.105235    1.121384    1.065257   \n",
       "AAPL      0.524346    0.525619    0.526365    0.512902    0.533829   \n",
       "AMZN      7.916162    7.857095    7.828671    7.813063    8.053355   \n",
       "BAC      -0.979799   -0.979713   -0.979531   -0.979300   -0.979843   \n",
       "CCL       1.083385    1.078816    1.079888    1.114759    1.121639   \n",
       "CI        1.492234    1.501124    1.520849    1.461038    1.431835   \n",
       "DIS      -0.377397   -0.381426   -0.390111   -0.390291   -0.385758   \n",
       "F        -0.893936   -0.892774   -0.891611   -0.891506   -0.891564   \n",
       "FB       15.714156   15.608853   15.600000   14.673025   14.300273   \n",
       "FOX      -0.797872   -0.800392   -0.802150   -0.789928   -0.784835   \n",
       "GCI       0.000000    0.000000    0.000000    0.000000    0.000000   \n",
       "GOOG     29.875369   30.323706   30.013927   29.339862   29.340243   \n",
       "HD       -0.845662   -0.845100   -0.842427   -0.838974   -0.837698   \n",
       "IBM      -0.108731   -0.103667   -0.104493   -0.111519   -0.123260   \n",
       "LUV      -0.622945   -0.624460   -0.619993   -0.614871   -0.611460   \n",
       "MSFT      0.574136    0.571238    0.553366    0.532838    0.534520   \n",
       "NCLH     -0.403836   -0.412402   -0.406765   -0.403380   -0.401697   \n",
       "NFLX      4.747096    4.802132    4.674448    4.656442    4.698134   \n",
       "NKE      -0.794122   -0.793236   -0.793029   -0.790385   -0.789606   \n",
       "ORCL     -0.209668   -0.211176   -0.206949   -0.209405   -0.295659   \n",
       "RCL       1.401185    1.380179    1.386646    1.394995    1.653773   \n",
       "TSLA      1.599936    1.612114    1.575952    1.520174    1.487186   \n",
       "TWX      -0.704865   -0.702457   -0.700389   -0.696868   -0.693512   \n",
       "UA       -0.854564   -0.857246   -0.853760   -0.851973   -0.852805   \n",
       "WFC       3.039230    3.109183    2.970170    2.943141    2.918630   \n",
       "WM        0.525870    0.517684    0.545438    0.546503    0.571403   \n",
       "WMT       0.014582    0.014609    0.032180    0.019231    0.019474   \n",
       "WWE      -0.574085   -0.576048   -0.585287   -0.582847   -0.585105   \n",
       "XOM       0.971077    1.005930    1.031368    1.032621    1.027679   \n",
       "\n",
       "Date    2018-03-21  2018-03-22  2018-03-23  2018-03-26  2018-03-27  \n",
       "Ticker                                                              \n",
       "AAL            NaN         NaN         NaN         NaN         NaN  \n",
       "AAP       1.130523    1.135538    1.172907    1.213074    1.259528  \n",
       "AAPL      0.486203    0.511458    0.488091    0.505359    0.463699  \n",
       "AMZN      8.236060    8.145074    8.067297    8.005383    7.893014  \n",
       "BAC      -0.979853   -0.980215   -0.980496   -0.980435   -0.980281  \n",
       "CCL       1.104173    1.166939    1.208091    1.161629    1.226626  \n",
       "CI        1.491053    1.497583    1.546188    1.563526    1.518485  \n",
       "DIS      -0.390482   -0.391557   -0.399146   -0.403308   -0.399783  \n",
       "F        -0.890984   -0.893141   -0.892835   -0.892399   -0.891002  \n",
       "FB       14.260360   14.338605   14.093750   13.779317   13.052632  \n",
       "FOX      -0.785702   -0.780581   -0.777590   -0.771461   -0.762928  \n",
       "GCI       0.000000    0.000000    0.000000    0.000000    0.000000  \n",
       "GOOG     29.051791   27.996130   27.817207   27.791963   26.857539  \n",
       "HD       -0.836811   -0.832911   -0.831827   -0.832531   -0.826206  \n",
       "IBM      -0.119818   -0.132352   -0.133353   -0.130457   -0.130353  \n",
       "LUV      -0.631246   -0.625222   -0.619048   -0.624503   -0.626819  \n",
       "MSFT      0.600554    0.575263    0.537024    0.628408    0.578232  \n",
       "NCLH     -0.414252   -0.412964   -0.410415   -0.440819   -0.409076  \n",
       "NFLX      4.842348    4.818630    4.854864    5.108886    4.687346  \n",
       "NKE      -0.790350   -0.789958   -0.785240   -0.794287   -0.779939  \n",
       "ORCL     -0.291334   -0.287644   -0.306978   -0.294689   -0.314191  \n",
       "RCL       1.623777    1.618871    1.613083    1.580034    1.606875  \n",
       "TSLA      1.565697    1.571975    1.576384    1.536524    1.359932  \n",
       "TWX      -0.698954   -0.695050   -0.693009   -0.691005   -0.662583  \n",
       "UA       -0.852345   -0.854551   -0.851788   -0.846154   -0.847983  \n",
       "WFC       2.894101    2.831510    2.715743    2.616183    2.568436  \n",
       "WM        0.568169    0.603655    0.626128    0.608912    0.629941  \n",
       "WMT       0.026304    0.034425    0.030398    0.040057    0.033137  \n",
       "WWE      -0.588342   -0.588019   -0.580660   -0.578286   -0.579547  \n",
       "XOM       1.067218    1.047354    1.034897    1.005420    1.037037  \n",
       "\n",
       "[30 rows x 14156 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "acquisition().pipe((concat_pivot, 'df'), values='Adj. Close', columns='Date', rows='Ticker').pipe(compute_pct_change)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Error handling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Response [200]>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import requests as r\n",
    "url='https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/documents/the-html5-breakfast-site.html'\n",
    "r.get(url)\n",
    "# 200 means it worked fine "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Response [403]>"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url='https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/documents/forbidden'\n",
    "r.get(url)\n",
    "# 403 means access denied "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "url='http://google.com'\n",
    "response=r.get(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Response [200]>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<Response [301]>]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.history\n",
    "# 301 means that the document has moved to another adress / but the original webpage is accessible anyway"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "b'<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\\n<TITLE>301 Moved</TITLE></HEAD><BODY>\\n<H1>301 Moved</H1>\\nThe document has moved\\n<A HREF=\"http://www.google.com/\">here</A>.\\r\\n</BODY></HTML>\\r\\n'"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.history[0].content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "response=r.get('http://fb.com')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<Response [301]>, <Response [301]>]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'http://fb.com/'"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.history[0].url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://fb.com/'"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.history[1].url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://www.facebook.com/'"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response.url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "def func(url, headers={}):\n",
    "    resp=r.get(url,headers=headers)\n",
    "    if resp:\n",
    "        return resp.content\n",
    "    else:\n",
    "        print('Sorry, there is an error:',resp.status_code,'somewhere')\n",
    "        return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "b'<!DOCTYPE html>\\n<html>\\n  <head>\\n    <title>The HTML5 Breakfast Site</title>\\n    <meta charset=\"UTF-8\">\\n\\n    <style>\\n      body {\\n        background-color: limegreen;\\n        margin: 40px;\\n      } \\n    </style>\\n  </head>\\n  <body>\\n    <div id=\"container\">\\n\\n      <nav id=\"topnav\">\\n        <a href=\"https://www.ironhack.com\" target=\"_blank\">HOME</a> |\\n        <a href=\"https://www.ironhack.com/en/team\" target=\"_blank\">ABOUT US</a> |\\n        <a href=\"https://www.ironhack.com/en/contact\" target=\"_blank\">CONTACT US</a>\\n      </nav>\\n\\n      <section id=\"content\">\\n        <h1>The Ironhack Breakfast Place</h1>\\n        <p>Here you will find all sorts of delicious treats</p>\\n        <figure>\\n          <img src=\"breakfast.jpg\" width=\"400\" alt=\"healthy breakfast\">\\n          <figcaption>CC Image courtesy of Ruth Hartnup on Flickr</figcaption>\\n        </figure>\\n      </section>\\n\\n      <footer>\\n        <p class=\"love\">Made with love by Ironhack</p>\\n      </footer>\\n\\n    </div>\\n  </body>\\n</html>\\n'"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "func('https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/documents/the-html5-breakfast-site.html')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorry, there is an error: 403 somewhere\n"
     ]
    }
   ],
   "source": [
    "func('https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/data-static/documents/forbidden')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Types of error that we can meet"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Too many redirects \n",
    "2. Timeout Error\n",
    "3. SSL Error\n",
    "4. OS Error \n",
    "5. Rate limitations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "from requests.exceptions import SSLError, Timeout, TooManyRedirects, RequestException\n",
    "from contextlib import closing\n",
    "from IPython.display import Markdown, display\n",
    "import warnings\n",
    "\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "timeout_glob=0.05\n",
    "verify_glob=True\n",
    "allow_glob=False\n",
    "\n",
    "def printmd(string):\n",
    "    display(Markdown('**'+string+'**'))\n",
    "    \n",
    "def is_good_response(x):\n",
    "    \"\"\"\n",
    "    Returns True if the response seems to be an HTML, False otherwise\n",
    "    x is response\n",
    "    \"\"\"\n",
    "    content_type=x.headers['Content-Type'].lower()\n",
    "    return ((x.status_code==200 and content_type is not None and content_type.find('html')>1), x.status_code)\n",
    "\n",
    "def log_error(e):\n",
    "    print(e)\n",
    "    \n",
    "def status_handler(status):\n",
    "    if status<300:\n",
    "        print('Alles gut!')\n",
    "    elif status>=400 and status<500:\n",
    "        print('request has failed due to you mistake bro. Check the link, headers, server and whether you have an access to this page.')\n",
    "    else:\n",
    "        print('Yoooo, I have no clue what has happened. But you are stuck, since you didnt receive any output from server')\n",
    "    return None\n",
    "\n",
    "def adaptive_scraping(url, timeout=timeout_glob, verify=verify_glob):\n",
    "    global timeout_glob\n",
    "    global verify_glob\n",
    "    global allow_glob\n",
    "    import requests as r\n",
    "    try:\n",
    "        with closing(r.get(url, stream=True, timeout=timeout_glob, verify=verify_glob, allow_redirects=allow_glob)) as resp:\n",
    "            test1=is_good_response(resp)\n",
    "            print(resp)\n",
    "            if test1[0]:\n",
    "                return resp.content\n",
    "            else:\n",
    "                return status_handler(test1[1])\n",
    "    except Timeout as e:\n",
    "        log_error(f'Error during request to {url}: {str(e)}')\n",
    "        printmd('We can increase response waiting time. Do you want to continue?')\n",
    "        ans=input('\\n[Yes|No]\\t')\n",
    "        if ans.lower()=='yes':\n",
    "            timeout_glob*=2\n",
    "            return adaptive_scraping(url)\n",
    "        else:\n",
    "            return None\n",
    "    except SSLError as e:\n",
    "        log_error(f'Error during request to {url}: {str(e)}')\n",
    "        printmd('We can skip verification test. Do you want to continue?')\n",
    "        ans=input('\\n[Yes|No]\\t')\n",
    "        if ans.lower()=='yes':\n",
    "            verify_glob=False\n",
    "            return adaptive_scraping(url)\n",
    "        else:\n",
    "            return None\n",
    "    except TooManyRedirects as e:\n",
    "        log_error(f'Error during request to {url}: {str(e)}')\n",
    "        printmd('We can increase the number of allowed redirects. Do you want to continue?')\n",
    "        ans=input('\\n[Yes|No]\\t')\n",
    "        if ans.lower()=='yes':\n",
    "            allow_glob=True\n",
    "            return adaptive_scraping(url)\n",
    "        else:\n",
    "            return None\n",
    "    except RequestException as e:\n",
    "        log_error(f'Error during request to {url}: {str(e)}')\n",
    "        printmd('Unfortunately, we have no clue what to do.  Please try again later. ')\n",
    "        return None\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
